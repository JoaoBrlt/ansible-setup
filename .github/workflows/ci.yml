---
name: CI

"on":
  # Manual trigger
  workflow_dispatch:

  # When a commit is pushed
  push:

  # Every month
  schedule:
    - cron: "0 8 2 * *"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout the project
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          cache: pip

      - name: Install the dependencies
        run: pip3 install -r requirements.txt

      - name: Lint the code
        run: ansible-lint

  detect_roles:
    name: Detect roles
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      roles: ${{ steps.detect_roles.outputs.roles }}

    steps:
      - name: Checkout the project
        uses: actions/checkout@v4

      - name: Detect the roles
        id: detect_roles
        run: echo "roles=$(ls -d ./roles/*/molecule | awk -F '/' '{print $3}' | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}

  test_roles:
    name: Test roles
    needs: detect_roles
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        role: ${{ fromJson(needs.detect_roles.outputs.roles) }}

    steps:
      - name: Checkout the project
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up QEMU
        run: |
          sudo apt update
          sudo apt install -y qemu-kvm libvirt-daemon-system libvirt-dev
          sudo usermod -a -G kvm $USER
          sudo usermod -a -G libvirt $USER
          sudo tee -a /etc/libvirt/libvirtd.conf << EOF
          unix_sock_group = "libvirt"
          unix_sock_rw_perms = "0777"
          EOF
          sudo chmod 777 /var/run/libvirt/libvirt-sock
          sudo systemctl start libvirtd

      - name: Set up Vagrant
        run: |
          wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt install -y vagrant
          vagrant plugin install vagrant-libvirt

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          cache: pip

      - name: Install the dependencies
        run: pip3 install -r requirements.txt

      - name: Test the role
        run: molecule test
        working-directory: ./roles/${{ matrix.role }}
